  (defmacro with-fast-args-parse ((line a b) &body body)
    (let ((s (gensym "S")) (len (gensym "LEN"))
          (sp1 (gensym "SP1")) (sp2 (gensym "SP2"))
          (end-a (gensym "END-A")))
      `(let* ((,s ,line)
              (,len (length ,s)))
         (declare (type simple-string ,s)
                  (type fixnum ,len)
                  (optimize (speed 3) (safety 0) (debug 0)))
         (let* ((,sp1 (position #\Space ,s :start 0 :end ,len))
                (,sp2 (and ,sp1 (position #\Space ,s :start (1+ ,sp1) :end ,len)))
                (,end-a (or ,sp2 ,len))
                (,a (and ,sp1 (parse-integer ,s :start (1+ ,sp1) :end ,end-a)))
                (,b (and ,sp2 (parse-integer ,s :start (1+ ,sp2) :end ,len))))
           ,@body))))


